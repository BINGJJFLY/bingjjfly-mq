1、为什么引入MQ？
 	应用解耦（上游系统调用下游系统，下游系统有改动不能让上游系统有感知，新的模块进来代码改动最小）
 	异步模型（rpc调用为同步，长链路调用有性能风险）
 	流量削峰（上游系统步骤少处理快，下游系统步骤多处理慢，保证业务系统不被冲垮）

2、Queue和Topic的差异？
			“负载均衡”模式，即使没有消费者消息也不会丢弃，一个消息只被一个消费者消费
	工作模式	
			“发布-订阅”模式，没有订阅者消息会被丢弃，一个消息被多个订阅者消费
	
			Queue数据默认会在服务器上以文件形式保存，如ActiveMQ在$AMQ_HOME\data\kahadb下，也可配置DB存储
	有无状态
			无状态
			
			消息不会被丢弃
	传递完整性	
			没有订阅者，消息被丢弃
	
			由于一个消息只被一个消费者消费，消费者增多，性能也不会明显降低，不通的消息协议之间性能有差异
	处理效率
			由于消息按照订阅者数量复制，消费者增多，性能明显降低，不通的消息协议之间性能有差异
	
3、什么是JMS？
	java消息服务，指的是两个应用系统之间异步通讯的API，应用系统之间不互相直接相连而是通过消息中间件进行通讯	
	
4、JMS四大组成元素？
	Provider（MQ服务器）、Producer（生产者）、Consumer（消费者）、Message（消息）

5、消息头组成元素？
	消息头、消息体、消息属性
	消息头属性：
			JMSDestination	目的地
			JMSDeliveryMode 是否持久化，队列默认是，主题消息模式（非持久发布订阅）默认不是，主题发布订阅模式（持久发布订阅）默认是
			JMSExpiration	过期时间，默认长期有效
			JMSPriority		优先级，默认4
			JMSMessageID	唯一标识

6、消息的可靠性
	事务、持久化、签收
		
	事务和签收的关系：消费者未开启事务，签收模式为手动的话，消息应告知已签收；消费者开启事务，提交事务，消息全部自动签收
	
7、指定配置文件启动
	/home/activeMQ/apache-activemq-5.15.9/bin/activemq start xbean:file:/home/activeMQ/apache-activemq-5.15.9/conf/activemq.xml














	
	
	
	
		